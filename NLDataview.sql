/**********************************************************************************************
1. Sysfarma kayıtların CustomerID değeri AccountSaleNrm, AccountCustomerBridge ve 
   HospitalBridge dosyasında  "MDQsysf" şeklinde geliyor. CustomerID = '999999', 
   IMSCustomerID = '39999999' şeklinde düzenlenmeli

2. HospitalBridge dosyasında dıplicate kayıtların temizlenmesi
***********************************************************************************************/
/* 1. PREPARE TOTAL TABLE  */ 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGTotal]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGTotal]
GO
SELECT S.AccountSalesDataNrmID, S.CustomerID, S.HospitalName, S.ZipCode, S.City, 
   S.ProductID, PB.FccId, ('U-' + S.Period) UPeriod, 
   ('V-' + S.Period) VPeriod, ('C-' + S.Period) CPeriod, S.Price2, SUM(S.Unit) Unit, 
   SUM(S.Unit) * S.Price2/100 Cost, (SUM(S.Unit) * CAST(C2.cu AS FLOAT)) Cu, PB.ProductName
INTO tmpGTotal   
FROM AccountSalesDataNrm S INNER JOIN 
    AccountCustomerBridge CB ON CB.CycleID = 46 AND CB.AccountID = S.AccountID
                            AND S.CustomerID = CB.CustomerID AND S.HospitalName = CB.CustomerName 
                            AND S.ZipCode = CB.Phone AND S.City = CB.City INNER JOIN 
    AccountProductBridge PB ON PB.CycleID = 46 AND S.ProductID = PB.ProductID AND PB.AccountID = 19 LEFT JOIN
    dwCUDU C2 ON C2.fcc = PB.FccId AND C2.CycleID = 46
WHERE S.IsDeleted = 0 AND CB.IsDeleted = 0 AND PB.IsDeleted = 0 
--  AND PB.FccId IN ('0000289912','0000290676','0000290677','0000306501','0000314397')
--  AND  S.CustomerID = '999999' AND S.ProductID IN ('15931846', '15931846')
--  AND S.Period IN ('2013M08', '2013M09')
GROUP BY S.AccountSalesDataNrmID, S.CustomerID, S.HospitalName, S.ZipCode, S.City, S.ProductID, 
  PB.ProductName, PB.FccId, ('U-' + S.Period), 
('V-' + S.Period), ('C-' + S.Period), S.Price2, C2.cu
OPTION (MAXDOP 12);


--select * from [tmpGTotal] where UPeriod = 'U-2012M07'


/* 2. PREPARE PIVOT TABLE */
/* !!!SQL ifade dönemler değiştiğinde yeniden düzenlenmeli!!! */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1]
GO
SELECT CustomerID, ProductID, HospitalName, FccID, ProductName, ZipCode, City,
ISNULL(SUM([U-2011M01]),0) [U-2011M01],
ISNULL(SUM([U-2011M02]),0) [U-2011M02],
ISNULL(SUM([U-2011M03]),0) [U-2011M03],
ISNULL(SUM([U-2011M04]),0) [U-2011M04],
ISNULL(SUM([U-2011M05]),0) [U-2011M05],
ISNULL(SUM([U-2011M06]),0) [U-2011M06],
ISNULL(SUM([U-2011M07]),0) [U-2011M07],
ISNULL(SUM([U-2011M08]),0) [U-2011M08],
ISNULL(SUM([U-2011M09]),0) [U-2011M09],
ISNULL(SUM([U-2011M10]),0) [U-2011M10],
ISNULL(SUM([U-2011M11]),0) [U-2011M11],
ISNULL(SUM([U-2011M12]),0) [U-2011M12],
ISNULL(SUM([U-2012M01]),0) [U-2012M01],
ISNULL(SUM([U-2012M02]),0) [U-2012M02],
ISNULL(SUM([U-2012M03]),0) [U-2012M03],
ISNULL(SUM([U-2012M04]),0) [U-2012M04],
ISNULL(SUM([U-2012M05]),0) [U-2012M05],
ISNULL(SUM([U-2012M06]),0) [U-2012M06],
ISNULL(SUM([U-2012M07]),0) [U-2012M07],
ISNULL(SUM([U-2012M08]),0) [U-2012M08],
ISNULL(SUM([U-2012M09]),0) [U-2012M09],
ISNULL(SUM([U-2012M10]),0) [U-2012M10],
ISNULL(SUM([U-2012M11]),0) [U-2012M11],
ISNULL(SUM([U-2012M12]),0) [U-2012M12],
ISNULL(SUM([U-2013M01]),0) [U-2013M01],
ISNULL(SUM([U-2013M02]),0) [U-2013M02],
ISNULL(SUM([U-2013M03]),0) [U-2013M03],
ISNULL(SUM([U-2013M04]),0) [U-2013M04],
ISNULL(SUM([U-2013M05]),0) [U-2013M05],
ISNULL(SUM([U-2013M06]),0) [U-2013M06],
ISNULL(SUM([U-2013M07]),0) [U-2013M07],
ISNULL(SUM([U-2013M08]),0) [U-2013M08],
ISNULL(SUM([U-2013M09]),0) [U-2013M09],
ISNULL(SUM([U-2013M10]),0) [U-2013M10],
ISNULL(SUM([U-2013M11]),0) [U-2013M11],
ISNULL(SUM([U-2013M12]),0) [U-2013M12],
ISNULL(SUM([U-2014M01]),0) [U-2014M01],
ISNULL(SUM([U-2014M02]),0) [U-2014M02],
ISNULL(SUM([U-2014M03]),0) [U-2014M03],
ISNULL(SUM([U-2014M04]),0) [U-2014M04],
ISNULL(SUM([U-2014M05]),0) [U-2014M05],
ISNULL(SUM([U-2014M06]),0) [U-2014M06],
ISNULL(SUM([U-2014M07]),0) [U-2014M07],
ISNULL(SUM([U-2014M08]),0) [U-2014M08],
ISNULL(SUM([U-2014M09]),0) [U-2014M09],
ISNULL(SUM([U-2014M10]),0) [U-2014M10],
ISNULL(SUM([V-2011M01]),0) [V-2011M01],
ISNULL(SUM([V-2011M02]),0) [V-2011M02],
ISNULL(SUM([V-2011M03]),0) [V-2011M03],
ISNULL(SUM([V-2011M04]),0) [V-2011M04],
ISNULL(SUM([V-2011M05]),0) [V-2011M05],
ISNULL(SUM([V-2011M06]),0) [V-2011M06],
ISNULL(SUM([V-2011M07]),0) [V-2011M07],
ISNULL(SUM([V-2011M08]),0) [V-2011M08],
ISNULL(SUM([V-2011M09]),0) [V-2011M09],
ISNULL(SUM([V-2011M10]),0) [V-2011M10],
ISNULL(SUM([V-2011M11]),0) [V-2011M11],
ISNULL(SUM([V-2011M12]),0) [V-2011M12],
ISNULL(SUM([V-2012M01]),0) [V-2012M01],
ISNULL(SUM([V-2012M02]),0) [V-2012M02],
ISNULL(SUM([V-2012M03]),0) [V-2012M03],
ISNULL(SUM([V-2012M04]),0) [V-2012M04],
ISNULL(SUM([V-2012M05]),0) [V-2012M05],
ISNULL(SUM([V-2012M06]),0) [V-2012M06],
ISNULL(SUM([V-2012M07]),0) [V-2012M07],
ISNULL(SUM([V-2012M08]),0) [V-2012M08],
ISNULL(SUM([V-2012M09]),0) [V-2012M09],
ISNULL(SUM([V-2012M10]),0) [V-2012M10],
ISNULL(SUM([V-2012M11]),0) [V-2012M11],
ISNULL(SUM([V-2012M12]),0) [V-2012M12],
ISNULL(SUM([V-2013M01]),0) [V-2013M01],
ISNULL(SUM([V-2013M02]),0) [V-2013M02],
ISNULL(SUM([V-2013M03]),0) [V-2013M03],
ISNULL(SUM([V-2013M04]),0) [V-2013M04],
ISNULL(SUM([V-2013M05]),0) [V-2013M05],
ISNULL(SUM([V-2013M06]),0) [V-2013M06],
ISNULL(SUM([V-2013M07]),0) [V-2013M07],
ISNULL(SUM([V-2013M08]),0) [V-2013M08],
ISNULL(SUM([V-2013M09]),0) [V-2013M09],
ISNULL(SUM([V-2013M10]),0) [V-2013M10],
ISNULL(SUM([V-2013M11]),0) [V-2013M11],
ISNULL(SUM([V-2013M12]),0) [V-2013M12],
ISNULL(SUM([V-2014M01]),0) [V-2014M01],
ISNULL(SUM([V-2014M02]),0) [V-2014M02],
ISNULL(SUM([V-2014M03]),0) [V-2014M03],
ISNULL(SUM([V-2014M04]),0) [V-2014M04],
ISNULL(SUM([V-2014M05]),0) [V-2014M05],
ISNULL(SUM([V-2014M06]),0) [V-2014M06],
ISNULL(SUM([V-2014M07]),0) [V-2014M07],
ISNULL(SUM([V-2014M08]),0) [V-2014M08],
ISNULL(SUM([V-2014M09]),0) [V-2014M09],
ISNULL(SUM([V-2014M10]),0) [V-2014M10],
ISNULL(SUM([C-2011M01]),0) [C-2011M01],
ISNULL(SUM([C-2011M02]),0) [C-2011M02],
ISNULL(SUM([C-2011M03]),0) [C-2011M03],
ISNULL(SUM([C-2011M04]),0) [C-2011M04],
ISNULL(SUM([C-2011M05]),0) [C-2011M05],
ISNULL(SUM([C-2011M06]),0) [C-2011M06],
ISNULL(SUM([C-2011M07]),0) [C-2011M07],
ISNULL(SUM([C-2011M08]),0) [C-2011M08],
ISNULL(SUM([C-2011M09]),0) [C-2011M09],
ISNULL(SUM([C-2011M10]),0) [C-2011M10],
ISNULL(SUM([C-2011M11]),0) [C-2011M11],
ISNULL(SUM([C-2011M12]),0) [C-2011M12],
ISNULL(SUM([C-2012M01]),0) [C-2012M01],
ISNULL(SUM([C-2012M02]),0) [C-2012M02],
ISNULL(SUM([C-2012M03]),0) [C-2012M03],
ISNULL(SUM([C-2012M04]),0) [C-2012M04],
ISNULL(SUM([C-2012M05]),0) [C-2012M05],
ISNULL(SUM([C-2012M06]),0) [C-2012M06],
ISNULL(SUM([C-2012M07]),0) [C-2012M07],
ISNULL(SUM([C-2012M08]),0) [C-2012M08],
ISNULL(SUM([C-2012M09]),0) [C-2012M09],
ISNULL(SUM([C-2012M10]),0) [C-2012M10],
ISNULL(SUM([C-2012M11]),0) [C-2012M11],
ISNULL(SUM([C-2012M12]),0) [C-2012M12],
ISNULL(SUM([C-2013M01]),0) [C-2013M01],
ISNULL(SUM([C-2013M02]),0) [C-2013M02],
ISNULL(SUM([C-2013M03]),0) [C-2013M03],
ISNULL(SUM([C-2013M04]),0) [C-2013M04],
ISNULL(SUM([C-2013M05]),0) [C-2013M05],
ISNULL(SUM([C-2013M06]),0) [C-2013M06],
ISNULL(SUM([C-2013M07]),0) [C-2013M07],
ISNULL(SUM([C-2013M08]),0) [C-2013M08],
ISNULL(SUM([C-2013M09]),0) [C-2013M09],
ISNULL(SUM([C-2013M10]),0) [C-2013M10],
ISNULL(SUM([C-2013M11]),0) [C-2013M11],
ISNULL(SUM([C-2013M12]),0) [C-2013M12],
ISNULL(SUM([C-2014M01]),0) [C-2014M01],
ISNULL(SUM([C-2014M02]),0) [C-2014M02],
ISNULL(SUM([C-2014M03]),0) [C-2014M03],
ISNULL(SUM([C-2014M04]),0) [C-2014M04],
ISNULL(SUM([C-2014M05]),0) [C-2014M05],
ISNULL(SUM([C-2014M06]),0) [C-2014M06],
ISNULL(SUM([C-2014M07]),0) [C-2014M07],
ISNULL(SUM([C-2014M08]),0) [C-2014M08],
ISNULL(SUM([C-2014M09]),0) [C-2014M09],
ISNULL(SUM([C-2014M10]),0) [C-2014M10]
INTO tmpGT1
FROM (
	   SELECT * FROM tmpGTotal
     ) as Sales
PIVOT
(
  SUM(Unit)
  FOR UPeriod IN ([U-2011M01],[U-2011M02],[U-2011M03],[U-2011M04],[U-2011M05],[U-2011M06],
    [U-2011M07],[U-2011M08],[U-2011M09],[U-2011M10],[U-2011M11],[U-2011M12],[U-2012M01],
    [U-2012M02],[U-2012M03],[U-2012M04],[U-2012M05],[U-2012M06],[U-2012M07],[U-2012M08],
    [U-2012M09],[U-2012M10],[U-2012M11],[U-2012M12],[U-2013M01],[U-2013M02],[U-2013M03],
    [U-2013M04],[U-2013M05],[U-2013M06],[U-2013M07],[U-2013M08],[U-2013M09],[U-2013M10],
    [U-2013M11],[U-2013M12],[U-2014M01],[U-2014M02],[U-2014M03],[U-2014M04],[U-2014M05],
    [U-2014M06],[U-2014M07],[U-2014M08],[U-2014M09],[U-2014M10])
) AS PV1
PIVOT
(
  SUM(Cost)
  FOR VPeriod IN ([V-2011M01],[V-2011M02],[V-2011M03],[V-2011M04],[V-2011M05],[V-2011M06],
    [V-2011M07],[V-2011M08],[V-2011M09],[V-2011M10],[V-2011M11],[V-2011M12],[V-2012M01],
    [V-2012M02],[V-2012M03],[V-2012M04],[V-2012M05],[V-2012M06],[V-2012M07],[V-2012M08],
    [V-2012M09],[V-2012M10],[V-2012M11],[V-2012M12],[V-2013M01],[V-2013M02],[V-2013M03],
    [V-2013M04],[V-2013M05],[V-2013M06],[V-2013M07],[V-2013M08],[V-2013M09],[V-2013M10],
    [V-2013M11],[V-2013M12],[V-2014M01],[V-2014M02],[V-2014M03],[V-2014M04],[V-2014M05],
    [V-2014M06],[V-2014M07],[V-2014M08],[V-2014M09],[V-2014M10])
) PV2
PIVOT
(
  SUM(Cu)
  FOR CPeriod IN ([C-2011M01],[C-2011M02],[C-2011M03],[C-2011M04],[C-2011M05],[C-2011M06],
    [C-2011M07],[C-2011M08],[C-2011M09],[C-2011M10],[C-2011M11],[C-2011M12],[C-2012M01],
    [C-2012M02],[C-2012M03],[C-2012M04],[C-2012M05],[C-2012M06],[C-2012M07],[C-2012M08],
    [C-2012M09],[C-2012M10],[C-2012M11],[C-2012M12],[C-2013M01],[C-2013M02],[C-2013M03],
    [C-2013M04],[C-2013M05],[C-2013M06],[C-2013M07],[C-2013M08],[C-2013M09],[C-2013M10],
    [C-2013M11],[C-2013M12],[C-2014M01],[C-2014M02],[C-2014M03],[C-2014M04],[C-2014M05],
    [C-2014M06],[C-2014M07],[C-2014M08],[C-2014M09],[C-2014M10])
) PV3
GROUP BY CustomerID, ProductID, HospitalName, FccID, ProductName, ZipCode, City
OPTION (MAXDOP 12);

/*
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGTotal]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGTotal]
GO
*/

ALTER TABLE tmpGT1 ADD molCount int;
ALTER TABLE tmpGT1 ADD Comb varchar(8);

/* !!! tmpMol tablosunun oluşturulması gerekir... */
UPDATE tmpGT1
   SET [molCount] = C.Adet
FROM tmpGT1 G INNER JOIN 
    ( SELECT fxcd, COUNT(fxcd) Adet FROM dwMolList GROUP BY fxcd) C ON RIGHT(C.fxcd,10) = G.FccID
OPTION (MAXDOP 12);
    
UPDATE tmpGT1 SET Comb = 'MONO' WHERE molCount = 1;
UPDATE tmpGT1 SET Comb = 'COMBI' WHERE molCount > 1;
UPDATE tmpGT1 SET Comb = 'Unknown' WHERE molCount IS NULL;


/* ATCList ve NFCList kayıtlarının oluşturulması */
/* Bu kayıtlar için CPI dosyasının import edilmesi gerekiyor */
TRUNCATE TABLE AtcList;

INSERT INTO AtcList (AtcCode, AtcDesc)
SELECT ClassCodeAbbr, ClassCodeDesc FROM ClassCodeDefinition 
WHERE SchemeAbbr = 'ATC' 
--  AND ClassCodeAbbr NOT LIKE 'Z%';

--SELECT * FROM AtcList WHERE SUBSTRING(AtcCode,2,4) = '00 0'; 
UPDATE AtcList SET AtcCode = LEFT(AtcCode,3) WHERE SUBSTRING(AtcCode,2,4) = '00 0'; 

--SELECT * FROM AtcList WHERE SUBSTRING(AtcCode,4,2)  = ' 0'; 
UPDATE AtcList SET AtcCode = LEFT(AtcCode,3) WHERE SUBSTRING(AtcCode,4,2)  = ' 0';

INSERT INTO AtcList (AtcCode, AtcDesc)
SELECT LEFT(AtcCode,4), AtcDesc FROM AtcList WHERE SUBSTRING(AtcCode,5,1)  = '0'; 

INSERT INTO dbo.AtcList (AtcCode, AtcDesc)
SELECT LEFT(AtcCode,1), AtcDesc FROM AtcList 
WHERE LEN(AtcCode) = 3 
--  AND AtcCode NOT LIKE 'Z%' 
  AND SUBSTRING(AtcCode,2,2) = '00'
GROUP BY LEFT(AtcCode,1), AtcDesc;
  
/*            
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('A1',   'APP DIGESTIF.METABOLISME')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('C1',   'APP. CARDIOVASCULAIRE')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('D1',   'DERMATOLOGIE')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z0',   'OTHER SPECIAL TC')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z9',   'MISCELLANEOUS')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z97',  'MISCELLANEOUS')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z97A', 'NUMARK/NUCROSS/VERN-CARUS')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z97A0','Z97A0')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z98',  'SPEC DUMMY NON VET')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z98A', 'SPEC DUMMY NON VET')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z98A0','Z98A0')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z98A1','Z98A1')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z98A2','SPEC DUMMY NON VET')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z99',  'PROMOTION')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z99A', 'PROMOTION')
INSERT INTO atclist (AtcCode,AtcDesc) VALUES ('Z99A1','PROMOTION')
*/

/* NFCList kayıtlarının oluşturulması */
TRUNCATE TABLE NfcList

INSERT INTO NfcList (nfc, nfcname)
SELECT ClassCodeAbbr, ClassCodeDesc FROM ClassCodeDefinition 
WHERE SchemeAbbr = 'NFC' 

/****** Object:  Index [IX_tmpGT1]    Script Date: 10/30/2013 11:03:50 ******/
CREATE NONCLUSTERED INDEX [IX_tmpGT1] ON [dbo].[tmpGT1] 
(
	[CustomerID] ASC,
	[HospitalName] ASC,
	[ZipCode] ASC,
	[City] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

/* LUNDBECK */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X2]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X2]
GO

SELECT  
	CASE P.PROD_FLAG_1 
	     WHEN 'G' THEN 'Generiek'
	     WHEN 'L' THEN 'Private Label'
	     WHEN 'E' THEN CASE PROD_FLAG_5 WHEN 'Y' THEN 'Parallel' ELSE 'Specialite' END
	     ELSE 'Unknown'
	END prod_flag,
    R.Region1 RegionLundbeck, 		
    CAST(RG.Brick as VARCHAR(7)) Region1, 
	B.Brick42Desc Region2, 
	CAST(RG.MiniBrick AS VARCHAR(7)) Region3, 
	RG.BTRegion, P.PROD_DESC ProductDesc, P.PACK_DESC PackDesc,	
	G.CustomerID, G.HospitalName,
	(AL1.AtcCode + ' ' + AL1.AtcDesc) ATC1, 
	(AL2.AtcCode + ' ' + AL2.AtcDesc) ATC2, 
	(AL3.AtcCode + ' ' + AL3.AtcDesc) ATC3, 
	(AL4.AtcCode + ' ' + AL4.AtcDesc) ATC4,
	(NFC1.nfc + '  ' + NFC1.nfcname) NFC1, 
	(NFC2.nfc + '  ' + NFC2.nfcname) NFC2, 
	(NFC3.nfc + '  ' + NFC3.nfcname) NFC3, 
	O.OrgName  Mnf,
	CASE 
		WHEN P.PACK_STAN_STR_MEASURE <> ''
		THEN (REPLACE(CAST(CAST(P.PACK_STAN_STR_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_STAN_STR_MEASURE) 
		WHEN P.PACK_VOL_WEIGHT_MEASURE <> ''		
		THEN (REPLACE(CAST(CAST(P.PACK_VOL_WEIGHT_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_VOL_WEIGHT_MEASURE) 
	END Strength,
	P.PROD_LAUNCH_DATE LDate, ISNULL(SP.SPCode,'') SPCode,  ISNULL(SP.PROD_DESC,P.PROD_DESC) ProdPlus, 
	ISNULL(SP.OrgName, Org.OrgName ) MnfPlus,
	[U-2011M01], [V-2011M01], [C-2011M01],
	[U-2011M02], [V-2011M02], [C-2011M02],
	[U-2011M03], [V-2011M03], [C-2011M03],
	[U-2011M04], [V-2011M04], [C-2011M04],
	[U-2011M05], [V-2011M05], [C-2011M05],
	[U-2011M06], [V-2011M06], [C-2011M06],
	[U-2011M07], [V-2011M07], [C-2011M07],
	[U-2011M08], [V-2011M08], [C-2011M08],
	[U-2011M09], [V-2011M09], [C-2011M09],
	[U-2011M10], [V-2011M10], [C-2011M10],
	[U-2011M11], [V-2011M11], [C-2011M11],
	[U-2011M12], [V-2011M12], [C-2011M12],
	[U-2012M01], [V-2012M01], [C-2012M01],
	[U-2012M02], [V-2012M02], [C-2012M02],
	[U-2012M03], [V-2012M03], [C-2012M03],
	[U-2012M04], [V-2012M04], [C-2012M04],
	[U-2012M05], [V-2012M05], [C-2012M05],
	[U-2012M06], [V-2012M06], [C-2012M06],
	[U-2012M07], [V-2012M07], [C-2012M07],
	[U-2012M08], [V-2012M08], [C-2012M08],
	[U-2012M09], [V-2012M09], [C-2012M09],
	[U-2012M10], [V-2012M10], [C-2012M10],
	[U-2012M11], [V-2012M11], [C-2012M11],
	[U-2012M12], [V-2012M12], [C-2012M12],
	[U-2013M01], [V-2013M01], [C-2013M01],
	[U-2013M02], [V-2013M02], [C-2013M02],
	[U-2013M03], [V-2013M03], [C-2013M03],
	[U-2013M04], [V-2013M04], [C-2013M04],
	[U-2013M05], [V-2013M05], [C-2013M05],
	[U-2013M06], [V-2013M06], [C-2013M06],
	[U-2013M07], [V-2013M07], [C-2013M07],
	[U-2013M08], [V-2013M08], [C-2013M08],
	[U-2013M09], [V-2013M09], [C-2013M09],
	[U-2013M10], [V-2013M10], [C-2013M10],
	[U-2013M11], [V-2013M11], [C-2013M11],
	[U-2013M12], [V-2013M12], [C-2013M12],
	[U-2014M01], [V-2014M01], [C-2014M01],
	[U-2014M02], [V-2014M02], [C-2014M02],
	[U-2014M03], [V-2014M03], [C-2014M03],
	[U-2014M04], [V-2014M04], [C-2014M04],
	[U-2014M05], [V-2014M05], [C-2014M05],
	[U-2014M06], [V-2014M06], [C-2014M06],
	[U-2014M07], [V-2014M07], [C-2014M07],
	[U-2014M08], [V-2014M08], [C-2014M08],
	[U-2014M09], [V-2014M09], [C-2014M09],
	[U-2014M10], [V-2014M10], [C-2014M10],	
	G.ProductID, G.FccID, RG.Category Outlet_type, molCount, Comb
INTO tmpGT1X	
FROM tmpGT1 G INNER JOIN
     HospitalBridge HB ON G.CustomerID = HB.HospitalID AND G.City = HB.City
         AND G.HospitalName = HB.HospitalName AND G.ZipCode = HB.ZipCode INNER JOIN
     RIGeneral RG ON RG.IMSID = HB.IMSID INNER JOIN
     RILundbeck R ON R.IMSID = HB.IMSID LEFT JOIN
     Brick42 B ON RG.FAIHospitalBrick = B.Brick42No LEFT JOIN      
     Pack P ON G.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10) LEFT JOIN
     ( SELECT LEFT(BRIDGE_CODE_2,6) SPCode, PROD_DESC, Org.OrgCode, org.OrgName  
       FROM Pack LEFT JOIN
            Org ON Pack.LAB_MAN_CODE = Org.OrgCode 
       GROUP BY LEFT(BRIDGE_CODE_2,6), PROD_DESC, Org.OrgCode, org.OrgName) AS SP 
       ON SP.SPCode = P.BRIDGE_CODE_6 LEFT JOIN
     Org O ON O.OrgCode = P.LAB_MAN_CODE LEFT JOIN
     AtcList AL1 ON AL1.AtcCode =  LEFT(P.CLASS_CODE_1, 1) LEFT JOIN 
     AtcList AL2 ON AL2.AtcCode = LEFT(P.CLASS_CODE_1,3) LEFT JOIN 
     AtcList AL3 ON AL3.AtcCode = LEFT(P.CLASS_CODE_1,4)LEFT JOIN 
     AtcList AL4 ON AL4.AtcCode = P.CLASS_CODE_1 LEFT JOIN
     NfcList NFC1 ON NFC1.nfc = LEFT(P.CLASS_CODE_4,1) LEFT JOIN
     NfcList NFC2 ON NFC2.nfc = LEFT(P.CLASS_CODE_4,2) LEFT JOIN
     NfcList NFC3 ON NFC3.nfc = P.CLASS_CODE_4 LEFT JOIN
     Org ON ORG.OrgCode = P.LAB_MAN_CODE
WHERE RG.Category IN ('ZIEKENHUIS','OVERIG INTRAMURAAL', 'ANDERS')
  AND (AL3.AtcCode IN ('N05A','N06A','N07D','N07E') 
       OR G.FccID IN (SELECT RIGHT(RTRIM(L.fxcd),10)  FROM dbo.dwMolN M INNER JOIN dbo.dwMolList L 
          ON M.molcode = L.mcode AND M.moldesc like 'BACLOFEN%'))
OPTION (MAXDOP 12);

UPDATE tmpGT1x SET molCount = 0 WHERE molCount IS NULL;

/* IPSEN & GALDERMA */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X2]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X2]
GO

SELECT DISTINCT 
	CASE P.PROD_FLAG_1 
	     WHEN 'G' THEN 'Generic'
	     WHEN 'L' THEN 'Private Label'
	     WHEN 'E' THEN CASE PROD_FLAG_5 WHEN 'Y' THEN 'Parallel Import' ELSE 'Branded' END
	     ELSE 'Unknown'
	END prod_flag,	
	R.Region1, R.Region2, R.Region3, RG.BTRegion, 
	P.PROD_DESC ProductDesc, P.PACK_DESC PackDesc,
	G.HospitalName, 
	(AL1.AtcCode + ' ' + AL1.AtcDesc) ATC1, 
	(AL2.AtcCode + ' ' + AL2.AtcDesc) ATC2, 
	(AL3.AtcCode + ' ' + AL3.AtcDesc) ATC3, 
	(AL4.AtcCode + ' ' + AL4.AtcDesc) ATC4,
	(NFC1.nfc + '  ' + NFC1.nfcname) NFC1, 
	(NFC2.nfc + '  ' + NFC2.nfcname) NFC2, 
	(NFC3.nfc + '  ' + NFC3.nfcname) NFC3, 
	O.OrgName  Mnf,
	CASE 
		WHEN P.PACK_STAN_STR_MEASURE <> ''
		THEN (REPLACE(CAST(CAST(P.PACK_STAN_STR_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_STAN_STR_MEASURE) 
		WHEN P.PACK_VOL_WEIGHT_MEASURE <> ''		
		THEN (REPLACE(CAST(CAST(P.PACK_VOL_WEIGHT_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_VOL_WEIGHT_MEASURE) 
	END Strength,
	P.PROD_LAUNCH_DATE LDate, ISNULL(SP.SPCode,'') SPCode, ISNULL(SP.PROD_DESC,P.PROD_DESC) ProdPlus, 
	ISNULL(SP.OrgName, Org.OrgName ) MnfPlus,
	[U-2011M01], [V-2011M01], [C-2011M01],
	[U-2011M02], [V-2011M02], [C-2011M02],
	[U-2011M03], [V-2011M03], [C-2011M03],
	[U-2011M04], [V-2011M04], [C-2011M04],
	[U-2011M05], [V-2011M05], [C-2011M05],
	[U-2011M06], [V-2011M06], [C-2011M06],
	[U-2011M07], [V-2011M07], [C-2011M07],
	[U-2011M08], [V-2011M08], [C-2011M08],
	[U-2011M09], [V-2011M09], [C-2011M09],
	[U-2011M10], [V-2011M10], [C-2011M10],
	[U-2011M11], [V-2011M11], [C-2011M11],
	[U-2011M12], [V-2011M12], [C-2011M12],
	[U-2012M01], [V-2012M01], [C-2012M01],
	[U-2012M02], [V-2012M02], [C-2012M02],
	[U-2012M03], [V-2012M03], [C-2012M03],
	[U-2012M04], [V-2012M04], [C-2012M04],
	[U-2012M05], [V-2012M05], [C-2012M05],
	[U-2012M06], [V-2012M06], [C-2012M06],
	[U-2012M07], [V-2012M07], [C-2012M07],
	[U-2012M08], [V-2012M08], [C-2012M08],
	[U-2012M09], [V-2012M09], [C-2012M09],
	[U-2012M10], [V-2012M10], [C-2012M10],
	[U-2012M11], [V-2012M11], [C-2012M11],
	[U-2012M12], [V-2012M12], [C-2012M12],
	[U-2013M01], [V-2013M01], [C-2013M01],
	[U-2013M02], [V-2013M02], [C-2013M02],
	[U-2013M03], [V-2013M03], [C-2013M03],
	[U-2013M04], [V-2013M04], [C-2013M04],
	[U-2013M05], [V-2013M05], [C-2013M05],
	[U-2013M06], [V-2013M06], [C-2013M06],
	[U-2013M07], [V-2013M07], [C-2013M07],
	[U-2013M08], [V-2013M08], [C-2013M08],
	[U-2013M09], [V-2013M09], [C-2013M09],
	[U-2013M10], [V-2013M10], [C-2013M10],
	[U-2013M11], [V-2013M11], [C-2013M11],
	[U-2013M12], [V-2013M12], [C-2013M12],
	[U-2014M01], [V-2014M01], [C-2014M01],
	[U-2014M02], [V-2014M02], [C-2014M02],
	[U-2014M03], [V-2014M03], [C-2014M03],
	[U-2014M04], [V-2014M04], [C-2014M04],
	[U-2014M05], [V-2014M05], [C-2014M05],	
	[U-2014M06], [V-2014M06], [C-2014M06],	
	[U-2014M07], [V-2014M07], [C-2014M07],	
	[U-2014M08], [V-2014M08], [C-2014M08],	
    [U-2014M09], [V-2014M09], [C-2014M09],
    [U-2014M10], [V-2014M10], [C-2014M10],
	G.ProductID, G.FccID, RG.Category Outlet_type, molCount, Comb
INTO tmpGT1X	
FROM tmpGT1 G INNER JOIN
     HospitalBridge HB ON G.CustomerID = HB.HospitalID AND G.HospitalName = HB.HospitalName 
                      AND G.ZipCode = HB.ZipCode AND G.City = HB.City INNER JOIN
     --RIIpsen R ON R.IMSID = HB.IMSID INNER JOIN
     RIGalderma R ON R.IMSID = HB.IMSID INNER JOIN
     RIGeneral RG ON RG.IMSID = HB.IMSID LEFT JOIN 
     Pack P ON G.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10) LEFT JOIN
     ( SELECT LEFT(BRIDGE_CODE_2,6) SPCode, PROD_DESC, Org.OrgCode, org.OrgName  
       FROM Pack LEFT JOIN
            Org ON Pack.LAB_MAN_CODE = Org.OrgCode 
       GROUP BY LEFT(BRIDGE_CODE_2,6), PROD_DESC, Org.OrgCode, org.OrgName) AS SP 
       ON SP.SPCode = P.BRIDGE_CODE_6 LEFT JOIN
     Org O ON O.OrgCode = P.LAB_MAN_CODE LEFT JOIN
     AtcList AL1 ON AL1.AtcCode =  LEFT(P.CLASS_CODE_1, 1) LEFT JOIN 
     AtcList AL2 ON AL2.AtcCode = LEFT(P.CLASS_CODE_1,3) LEFT JOIN 
     AtcList AL3 ON AL3.AtcCode = LEFT(P.CLASS_CODE_1,4)LEFT JOIN 
     AtcList AL4 ON AL4.AtcCode = P.CLASS_CODE_1 LEFT JOIN
     NfcList NFC1 ON NFC1.nfc = LEFT(P.CLASS_CODE_4,1) LEFT JOIN
     NfcList NFC2 ON NFC2.nfc = LEFT(P.CLASS_CODE_4,2) LEFT JOIN
     NfcList NFC3 ON NFC3.nfc = P.CLASS_CODE_4 LEFT JOIN
     Org ON ORG.OrgCode = P.LAB_MAN_CODE
WHERE RG.Category IN ('ZIEKENHUIS', 'OVERIG INTRAMURAAL', 'ANDERS');

UPDATE tmpGT1x SET molCount = 0 WHERE molCount IS NULL;

/* GENERAL */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tmpGT1X2]') AND type in (N'U'))
DROP TABLE [dbo].[tmpGT1X2]
GO
SELECT  
	CASE P.PROD_FLAG_1 
	     WHEN 'G' THEN 'Generiek'
	     WHEN 'L' THEN 'Private Label'
	     WHEN 'E' THEN CASE PROD_FLAG_5 WHEN 'Y' THEN 'Parallel' ELSE 'Specialite' END
	     ELSE 'Unknown'
	END prod_flag,	
    CAST(RG.Brick as VARCHAR(7)) Region1 , 
	B.Brick42Desc Region2, 
	CAST(RG.MiniBrick AS VARCHAR(7)) Region3, 
	RG.BTRegion, P.PROD_DESC ProductDesc, P.PACK_DESC PackDesc,	
	G.CustomerID, G.HospitalName,
	(AL1.AtcCode + ' ' + AL1.AtcDesc) ATC1, 
	(AL2.AtcCode + ' ' + AL2.AtcDesc) ATC2, 
	(AL3.AtcCode + ' ' + AL3.AtcDesc) ATC3, 
	(AL4.AtcCode + ' ' + AL4.AtcDesc) ATC4,
	(NFC1.nfc + '  ' + NFC1.nfcname) NFC1, 
	(NFC2.nfc + '  ' + NFC2.nfcname) NFC2, 
	(NFC3.nfc + '  ' + NFC3.nfcname) NFC3, 
	O.OrgName  Mnf,
	CASE 
		WHEN P.PACK_STAN_STR_MEASURE <> ''
		THEN (REPLACE(CAST(CAST(P.PACK_STAN_STR_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_STAN_STR_MEASURE) 
		WHEN P.PACK_VOL_WEIGHT_MEASURE <> ''		
		THEN (REPLACE(CAST(CAST(P.PACK_VOL_WEIGHT_UNIT AS FLOAT)/1000 AS VARCHAR),',','.') + ' ' + 
				P.PACK_VOL_WEIGHT_MEASURE) 
	END Strength,
	P.PROD_LAUNCH_DATE LDate, ISNULL(SP.SPCode,'') SPCode,  ISNULL(SP.PROD_DESC,P.PROD_DESC) ProdPlus, 
	ISNULL(SP.OrgName, Org.OrgName ) MnfPlus,
	[U-2011M01], [V-2011M01], [C-2011M01],
	[U-2011M02], [V-2011M02], [C-2011M02],
	[U-2011M03], [V-2011M03], [C-2011M03],
	[U-2011M04], [V-2011M04], [C-2011M04],
	[U-2011M05], [V-2011M05], [C-2011M05],
	[U-2011M06], [V-2011M06], [C-2011M06],
	[U-2011M07], [V-2011M07], [C-2011M07],
	[U-2011M08], [V-2011M08], [C-2011M08],
	[U-2011M09], [V-2011M09], [C-2011M09],
	[U-2011M10], [V-2011M10], [C-2011M10],
	[U-2011M11], [V-2011M11], [C-2011M11],
	[U-2011M12], [V-2011M12], [C-2011M12],
	[U-2012M01], [V-2012M01], [C-2012M01],
	[U-2012M02], [V-2012M02], [C-2012M02],
	[U-2012M03], [V-2012M03], [C-2012M03],
	[U-2012M04], [V-2012M04], [C-2012M04],
	[U-2012M05], [V-2012M05], [C-2012M05],
	[U-2012M06], [V-2012M06], [C-2012M06],
	[U-2012M07], [V-2012M07], [C-2012M07],
	[U-2012M08], [V-2012M08], [C-2012M08],
	[U-2012M09], [V-2012M09], [C-2012M09],
	[U-2012M10], [V-2012M10], [C-2012M10],
	[U-2012M11], [V-2012M11], [C-2012M11],
	[U-2012M12], [V-2012M12], [C-2012M12],
	[U-2013M01], [V-2013M01], [C-2013M01],
	[U-2013M02], [V-2013M02], [C-2013M02],
	[U-2013M03], [V-2013M03], [C-2013M03],
	[U-2013M04], [V-2013M04], [C-2013M04],
	[U-2013M05], [V-2013M05], [C-2013M05],
	[U-2013M06], [V-2013M06], [C-2013M06],
	[U-2013M07], [V-2013M07], [C-2013M07],
	[U-2013M08], [V-2013M08], [C-2013M08],
	[U-2013M09], [V-2013M09], [C-2013M09],
	[U-2013M10], [V-2013M10], [C-2013M10],
	[U-2013M11], [V-2013M11], [C-2013M11],
	[U-2013M12], [V-2013M12], [C-2013M12],
	[U-2014M01], [V-2014M01], [C-2014M01],
	[U-2014M02], [V-2014M02], [C-2014M02],
	[U-2014M03], [V-2014M03], [C-2014M03],
	[U-2014M04], [V-2014M04], [C-2014M04],
	[U-2014M05], [V-2014M05], [C-2014M05],
	[U-2014M06], [V-2014M06], [C-2014M06],
	[U-2014M07], [V-2014M07], [C-2014M07],
	[U-2014M08], [V-2014M08], [C-2014M08],
	[U-2014M09], [V-2014M09], [C-2014M09],
	[U-2014M10], [V-2014M10], [C-2014M10],	
	G.ProductID, G.FccID, RG.Category Outlet_type, molCount, Comb
INTO tmpGT1X	
FROM tmpGT1 G INNER JOIN
     HospitalBridge HB ON G.CustomerID = HB.HospitalID AND G.City = HB.City
         AND G.HospitalName = HB.HospitalName AND G.ZipCode = HB.ZipCode INNER JOIN
     RIGeneral RG ON RG.IMSID = HB.IMSID LEFT JOIN
     Brick42 B ON RG.FAIHospitalBrick = B.Brick42No LEFT JOIN      
     Pack P ON G.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10) LEFT JOIN
     ( SELECT LEFT(BRIDGE_CODE_2,6) SPCode, PROD_DESC, Org.OrgCode, org.OrgName  
       FROM Pack LEFT JOIN
            Org ON Pack.LAB_MAN_CODE = Org.OrgCode 
       GROUP BY LEFT(BRIDGE_CODE_2,6), PROD_DESC, Org.OrgCode, org.OrgName) AS SP 
       ON SP.SPCode = P.BRIDGE_CODE_6 LEFT JOIN
     Org O ON O.OrgCode = P.LAB_MAN_CODE LEFT JOIN
     AtcList AL1 ON AL1.AtcCode =  LEFT(P.CLASS_CODE_1, 1) LEFT JOIN 
     AtcList AL2 ON AL2.AtcCode = LEFT(P.CLASS_CODE_1,3) LEFT JOIN 
     AtcList AL3 ON AL3.AtcCode = LEFT(P.CLASS_CODE_1,4)LEFT JOIN 
     AtcList AL4 ON AL4.AtcCode = P.CLASS_CODE_1 LEFT JOIN
     NfcList NFC1 ON NFC1.nfc = LEFT(P.CLASS_CODE_4,1) LEFT JOIN
     NfcList NFC2 ON NFC2.nfc = LEFT(P.CLASS_CODE_4,2) LEFT JOIN
     NfcList NFC3 ON NFC3.nfc = P.CLASS_CODE_4 LEFT JOIN
     Org ON ORG.OrgCode = P.LAB_MAN_CODE
WHERE RG.Category IN ('ZIEKENHUIS','OVERIG INTRAMURAAL', 'ANDERS')
OPTION (MAXDOP 12);

UPDATE tmpGT1x SET molCount = 0 WHERE molCount IS NULL;

--!!!CPI içinde olmayan kayıt
SELECT X.* 
FROM [tmpGT1X] X LEFT JOIN 
     dbo.Pack P ON X.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10)
WHERE P.FIXED_CONT_CODE IS NULL;


ALTER TABLE tmpGT1X  ADD RID INT NOT NULL IDENTITY (1, 1);

SELECT G.*, Mol.moldesc
INTO tmpGT1X2
FROM tmpGT1X G LEFT JOIN 
     dbo.dwMolList T ON G.FccID = RIGHT(T.fxcd,10) LEFT JOIN
     dbo.dwMolN Mol ON Mol.molcode = T.mcode
OPTION (MAXDOP 12);
    
UPDATE tmpGT1X2 SET ATC1 = 'Unknown' WHERE ATC1 IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET ATC2 = 'Unknown' WHERE ATC2 IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET ATC3 = 'Unknown' WHERE ATC3 IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET ATC4 = 'Unknown' WHERE ATC4 IS NULL OPTION (MAXDOP 12);

UPDATE tmpGT1X2 SET prod_flag = 'Unknown' WHERE prod_flag  IS NULL OPTION (MAXDOP 12);
--UPDATE tmpGT1X2 SET RegionLundbeck = 'Unknown' WHERE RegionLundbeck  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET Region1 = 'Unknown' WHERE Region1  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET Region2 = 'Unknown' WHERE Region2  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET Region3 = 'Unknown' WHERE Region3  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET BTRegion = 'Unknown' WHERE  BTRegion IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET ProductDesc = 'Unknown' WHERE  ProductDesc IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET PackDesc = 'Unknown' WHERE  PackDesc IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET HospitalName = 'Unknown' WHERE HospitalName  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET NFC1 = 'Unknown' WHERE NFC1  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET NFC2 = 'Unknown' WHERE NFC2  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET NFC3 = 'Unknown' WHERE NFC3  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET Mnf = 'Unknown' WHERE  Mnf IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET Strength = 'Unknown' WHERE Strength  IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET LDate = 'Unknown' WHERE LDate IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET ProdPlus = 'Unknown' WHERE ProdPlus IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET MnfPlus = 'Unknown' WHERE  MnfPlus IS NULL OPTION (MAXDOP 12);

UPDATE tmpGT1X2 SET Comb = 'Unknown' WHERE  Comb IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET moldesc = 'Unknown' WHERE moldesc IS NULL OPTION (MAXDOP 12);
UPDATE tmpGT1X2 SET prod_flag = 'Unknown' WHERE RTRIM(prod_flag) = '' OPTION (MAXDOP 12);

UPDATE tmpGT1X2 
	SET HospitalName = REPLACE(REPLACE(HospitalName, ',', ' '), '''', ''),  
	ATC1 = REPLACE(ATC1, ',', ' '),
	ATC2 = REPLACE(ATC2, ',', ' '), 
	ATC3 = REPLACE(ATC3, ',', ' '),
	ATC4 = REPLACE(ATC4, ',', ' '),
	NFC1 = REPLACE(NFC1, ',', ' '), 
	NFC2 = REPLACE(NFC2, ',', ' '),
	NFC3 = REPLACE(NFC3, ',', ' '),
	moldesc = REPLACE(moldesc, ',', ' '),
	BTRegion = REPLACE(BTRegion, ',', ' '),
	PackDesc = REPLACE(PackDesc, ',', ' '),
	ProductDesc = REPLACE(ProductDesc, ',', ' '),
	ProdPlus = REPLACE(ProdPlus, ',', ' '),
--	RegionLundbeck = REPLACE(RegionLundbeck,',',' '),
	Region1 = REPLACE(Region1, ',', ' '),
	Region2 = REPLACE(Region2, ',', ' '),
	Region3 = REPLACE(Region3, ',', ' '),
	Mnf = REPLACE(Mnf, ',', ' '),
	Outlet_type = REPLACE(Outlet_type, ',', ' '),
	MnfPlus = REPLACE(MnfPlus, ',', ' ')
 OPTION (MAXDOP 12);


--/* Internal National
SELECT prod_flag, Region1, Region2, Region3, BTRegion, ProductID, ProductDesc, PackDesc, Outlet_type, 
	CustomerID, HospitalName, ATC1, ATC2, ATC3, ATC4, NFC1, NFC2, NFC3, Mnf, Strength, LDate, X.ProdPlus, 
	MnfPlus, Comb, moldesc,	--*/
	
/* Client ( National || Lampro )
SELECT prod_flag, Region2, ProductDesc, PackDesc, 
    Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus,  'NL Nederland' AS [National], Comb, moldesc, --*/
	
/* Client Lundbeck
SELECT prod_flag, RegionLundbeck, Region2, ProductDesc, PackDesc, 
    Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus,  'NL Nederland' AS [National], Comb, moldesc,	--*/
	SUM([U-2011M01]) [U-2011M01], CAST(SUM([V-2011M01]) AS DECIMAL(24,4)) [V-2011M01], SUM([C-2011M01]) [C-2011M01], 
	SUM([U-2011M02]) [U-2011M02], CAST(SUM([V-2011M02]) AS DECIMAL(24,4)) [V-2011M02], SUM([C-2011M02]) [C-2011M02], 
	SUM([U-2011M03]) [U-2011M03], CAST(SUM([V-2011M03]) AS DECIMAL(24,4)) [V-2011M03], SUM([C-2011M03]) [C-2011M03],
	SUM([U-2011M04]) [U-2011M04], CAST(SUM([V-2011M04]) AS DECIMAL(24,4)) [V-2011M04], SUM([C-2011M04]) [C-2011M04],
	SUM([U-2011M05]) [U-2011M05], CAST(SUM([V-2011M05]) AS DECIMAL(24,4)) [V-2011M05], SUM([C-2011M05]) [C-2011M05],
	SUM([U-2011M06]) [U-2011M06], CAST(SUM([V-2011M06]) AS DECIMAL(24,4)) [V-2011M06], SUM([C-2011M06]) [C-2011M06],
	SUM([U-2011M07]) [U-2011M07], CAST(SUM([V-2011M07]) AS DECIMAL(24,4)) [V-2011M07], SUM([C-2011M07]) [C-2011M07],
	SUM([U-2011M08]) [U-2011M08], CAST(SUM([V-2011M08]) AS DECIMAL(24,4)) [V-2011M08], SUM([C-2011M08]) [C-2011M08],
	SUM([U-2011M09]) [U-2011M09], CAST(SUM([V-2011M09]) AS DECIMAL(24,4)) [V-2011M09], SUM([C-2011M09]) [C-2011M09],
	SUM([U-2011M10]) [U-2011M10], CAST(SUM([V-2011M10]) AS DECIMAL(24,4)) [V-2011M10], SUM([C-2011M10]) [C-2011M10],
	SUM([U-2011M11]) [U-2011M11], CAST(SUM([V-2011M11]) AS DECIMAL(24,4)) [V-2011M11], SUM([C-2011M11]) [C-2011M11],
	SUM([U-2011M12]) [U-2011M12], CAST(SUM([V-2011M12]) AS DECIMAL(24,4)) [V-2011M12], SUM([C-2011M12]) [C-2011M12],
	SUM([U-2012M01]) [U-2012M01], CAST(SUM([V-2012M01]) AS DECIMAL(24,4)) [V-2012M01], SUM([C-2012M01]) [C-2012M01],
	SUM([U-2012M02]) [U-2012M02], CAST(SUM([V-2012M02]) AS DECIMAL(24,4)) [V-2012M02], SUM([C-2012M02]) [C-2012M02],
	SUM([U-2012M03]) [U-2012M03], CAST(SUM([V-2012M03]) AS DECIMAL(24,4)) [V-2012M03], SUM([C-2012M03]) [C-2012M03],
	SUM([U-2012M04]) [U-2012M04], CAST(SUM([V-2012M04]) AS DECIMAL(24,4)) [V-2012M04], SUM([C-2012M04]) [C-2012M04],
	SUM([U-2012M05]) [U-2012M05], CAST(SUM([V-2012M05]) AS DECIMAL(24,4)) [V-2012M05], SUM([C-2012M05]) [C-2012M05],
	SUM([U-2012M06]) [U-2012M06], CAST(SUM([V-2012M06]) AS DECIMAL(24,4)) [V-2012M06], SUM([C-2012M06]) [C-2012M06],
	SUM([U-2012M07]) [U-2012M07], CAST(SUM([V-2012M07]) AS DECIMAL(24,4)) [V-2012M07], SUM([C-2012M07]) [C-2012M07],
	SUM([U-2012M08]) [U-2012M08], CAST(SUM([V-2012M08]) AS DECIMAL(24,4)) [V-2012M08], SUM([C-2012M08]) [C-2012M08],
	SUM([U-2012M09]) [U-2012M09], CAST(SUM([V-2012M09]) AS DECIMAL(24,4)) [V-2012M09], SUM([C-2012M09]) [C-2012M09],
	SUM([U-2012M10]) [U-2012M10], CAST(SUM([V-2012M10]) AS DECIMAL(24,4)) [V-2012M10], SUM([C-2012M10]) [C-2012M10],
	SUM([U-2012M11]) [U-2012M11], CAST(SUM([V-2012M11]) AS DECIMAL(24,4)) [V-2012M11], SUM([C-2012M11]) [C-2012M11],
	SUM([U-2012M12]) [U-2012M12], CAST(SUM([V-2012M12]) AS DECIMAL(24,4)) [V-2012M12], SUM([C-2012M12]) [C-2012M12],
	SUM([U-2013M01]) [U-2013M01], CAST(SUM([V-2013M01]) AS DECIMAL(24,4)) [V-2013M01], SUM([C-2013M01]) [C-2013M01],
	SUM([U-2013M02]) [U-2013M02], CAST(SUM([V-2013M02]) AS DECIMAL(24,4)) [V-2013M02], SUM([C-2013M02]) [C-2013M02],
	SUM([U-2013M03]) [U-2013M03], CAST(SUM([V-2013M03]) AS DECIMAL(24,4)) [V-2013M03], SUM([C-2013M03]) [C-2013M03],
	SUM([U-2013M04]) [U-2013M04], CAST(SUM([V-2013M04]) AS DECIMAL(24,4)) [V-2013M04], SUM([C-2013M04]) [C-2013M04],
	SUM([U-2013M05]) [U-2013M05], CAST(SUM([V-2013M05]) AS DECIMAL(24,4)) [V-2013M05], SUM([C-2013M05]) [C-2013M05],
	SUM([U-2013M06]) [U-2013M06], CAST(SUM([V-2013M06]) AS DECIMAL(24,4)) [V-2013M06], SUM([C-2013M06]) [C-2013M06],
	SUM([U-2013M07]) [U-2013M07], CAST(SUM([V-2013M07]) AS DECIMAL(24,4)) [V-2013M07], SUM([C-2013M07]) [C-2013M07],
	SUM([U-2013M08]) [U-2013M08], CAST(SUM([V-2013M08]) AS DECIMAL(24,4)) [V-2013M08], SUM([C-2013M08]) [C-2013M08],
	SUM([U-2013M09]) [U-2013M09], CAST(SUM([V-2013M09]) AS DECIMAL(24,4)) [V-2013M09], SUM([C-2013M09]) [C-2013M09],		
	SUM([U-2013M10]) [U-2013M10], CAST(SUM([V-2013M10]) AS DECIMAL(24,4)) [V-2013M10], SUM([C-2013M10]) [C-2013M10],
	SUM([U-2013M11]) [U-2013M11], CAST(SUM([V-2013M11]) AS DECIMAL(24,4)) [V-2013M11], SUM([C-2013M11]) [C-2013M11],
	SUM([U-2013M12]) [U-2013M12], CAST(SUM([V-2013M12]) AS DECIMAL(24,4)) [V-2013M12], SUM([C-2013M12]) [C-2013M12],
	SUM([U-2014M01]) [U-2014M01], CAST(SUM([V-2014M01]) AS DECIMAL(24,4)) [V-2014M01], SUM([C-2014M01]) [C-2014M01],
	SUM([U-2014M02]) [U-2014M02], CAST(SUM([V-2014M02]) AS DECIMAL(24,4)) [V-2014M02], SUM([C-2014M02]) [C-2014M02],	
	SUM([U-2014M03]) [U-2014M03], CAST(SUM([V-2014M03]) AS DECIMAL(24,4)) [V-2014M03], SUM([C-2014M03]) [C-2014M03],
	SUM([U-2014M04]) [U-2014M04], CAST(SUM([V-2014M04]) AS DECIMAL(24,4)) [V-2014M04], SUM([C-2014M04]) [C-2014M04],
	SUM([U-2014M05]) [U-2014M05], CAST(SUM([V-2014M05]) AS DECIMAL(24,4)) [V-2014M05], SUM([C-2014M05]) [C-2014M05],
	SUM([U-2014M06]) [U-2014M06], CAST(SUM([V-2014M06]) AS DECIMAL(24,4)) [V-2014M06], SUM([C-2014M06]) [C-2014M06],
	SUM([U-2014M07]) [U-2014M07], CAST(SUM([V-2014M07]) AS DECIMAL(24,4)) [V-2014M07], SUM([C-2014M07]) [C-2014M07],
	SUM([U-2014M08]) [U-2014M08], CAST(SUM([V-2014M08]) AS DECIMAL(24,4)) [V-2014M08], SUM([C-2014M08]) [C-2014M08],
	SUM([U-2014M09]) [U-2014M09], CAST(SUM([V-2014M09]) AS DECIMAL(24,4)) [V-2014M09], SUM([C-2014M09]) [C-2014M09],
	SUM([U-2014M10]) [U-2014M10], CAST(SUM([V-2014M10]) AS DECIMAL(24,4)) [V-2014M10], SUM([C-2014M10]) [C-2014M10]	
FROM dbo.tmpGT1X2 X 
	LEFT JOIN dwExclude E ON X.FccID = RIGHT('0000000000' + E.Fcc,10)
--/*Internal National 
WHERE E.Fcc IS NULL AND ProductDesc <> 'Unknown'
GROUP BY prod_flag, Region1, Region2, Region3, BTRegion, ProductID, ProductDesc, PackDesc, Outlet_type, 
	CustomerID, HospitalName, ATC1, ATC2, ATC3, ATC4, NFC1, NFC2, NFC3, Mnf, Strength, LDate, X.ProdPlus, 
	MnfPlus, Comb, moldesc
ORDER BY prod_flag, Region1, Region2, Region3, BTRegion, ProductID, ProductDesc, PackDesc, Outlet_type, 
	CustomerID, HospitalName, ATC1, ATC2, ATC3, ATC4, NFC1, NFC2, NFC3, Mnf, Strength, LDate, X.ProdPlus, 
	MnfPlus, Comb, moldesc; --*/

/* Client National
WHERE E.Fcc IS NULL AND ProductDesc <> 'Unknown'
GROUP BY prod_flag, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus,  Comb, moldesc
ORDER BY prod_flag, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus,  Comb, moldesc; --*/

/* Client Lampro
WHERE E.Fcc IS NULL AND ProductDesc <> 'Unknown'    
  AND (X.ATC3 LIKE 'L01B%' OR moldesc = 'OCTREOTIDE'
       OR X.SPCode IN (SELECT DISTINCT LEFT(BRIDGE_CODE_2,6) FROM Pack 
                       WHERE Pack.PROD_DESC IN ('METOJECT', 'METHOTREXAAT-EBE')))
GROUP BY prod_flag, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus, Comb, moldesc
ORDER BY prod_flag, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, ATC3, ATC4, NFC3, Mnf, 
    Strength, LDate, X.ProdPlus, MnfPlus, Comb, moldesc; --*/

/* Client Lundbeck
WHERE E.Fcc IS NULL AND ProductDesc <> 'Unknown'
GROUP BY prod_flag, RegionLundbeck, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, 
	ATC3, ATC4, NFC3, Mnf, Strength, LDate, X.ProdPlus, MnfPlus, Comb, moldesc
ORDER BY prod_flag, RegionLundbeck, Region2, ProductDesc, PackDesc, Outlet_type, ATC1, ATC2, 
	ATC3, ATC4, NFC3, Mnf, Strength, LDate, X.ProdPlus, MnfPlus, Comb, moldesc; --*/	


    


--CLASS_CODE_6

SELECT X.*
FROM dbo.tmpGT1X X 
	LEFT JOIN dwExclude E ON X.FccID = RIGHT('0000000000' + E.Fcc,10)
	INNER JOIN Pack P ON X.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10) AND P.CLASS_CODE_6 = 'W01A0       '
WHERE x.[U-2014M06]>0;
	
	
select * from _TS_T109_201410	
--UPDATE _TS_T109_201410 SET VALUE = VALUE/100;
--UPDATE _TS_T109_201410 SET Unit = Unit * -1 WHERE UnitSign = '-';
--UPDATE _TS_T109_201410 SET Value = Value * -1 WHERE ValueSign LIKE '-%';

SELECT T.PFC, T.Unit, S.Unit FROM
( SELECT RIGHT(RTRIM(P.BRIDGE_CODE_2),7) PFC, SUM(x.[U-2014M10]) Unit
  FROM dbo.tmpGT1X X 
      LEFT JOIN dwExclude E ON X.FccID = RIGHT('0000000000' + E.Fcc,10)
      INNER JOIN Pack P ON X.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10)
  WHERE x.[U-2014M10]>0
  GROUP BY P.BRIDGE_CODE_2) S INNER JOIN 
( SELECT PFC, SUM(Unit) Unit FROM _TS_T109_201410 T WHERE Unit>0 GROUP BY PFC) T ON T.PFC = S.PFC 
WHERE T.Unit <> S.Unit;

--T109 içinde olmayan PFC
SELECT T.PFC, T.Unit,  S.Unit, S.PFC FROM
( SELECT RIGHT(RTRIM(P.BRIDGE_CODE_2),7) PFC, SUM(x.[U-2014M10]) Unit
  FROM dbo.tmpGT1X X 
      LEFT JOIN dwExclude E ON X.FccID = RIGHT('0000000000' + E.Fcc,10)
      INNER JOIN Pack P ON X.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10)
  WHERE x.[U-2014M10]>0
  GROUP BY P.BRIDGE_CODE_2) S LEFT JOIN 
( SELECT PFC, SUM(Unit) Unit FROM _TS_T109_201410 T WHERE Unit>0 GROUP BY PFC) T ON T.PFC = S.PFC 
WHERE T.PFC IS NULL;

--tmpGT1X İçinde olmayan PFC
SELECT T.PFC, T.Unit,  S.Unit, S.PFC FROM
( SELECT RIGHT(RTRIM(P.BRIDGE_CODE_2),7) PFC, SUM(x.[U-2014M10]) Unit
  FROM dbo.tmpGT1X X 
      LEFT JOIN dwExclude E ON X.FccID = RIGHT('0000000000' + E.Fcc,10)
      INNER JOIN Pack P ON X.FccId = SUBSTRING(P.FIXED_CONT_CODE,2,10)
  WHERE x.[U-2014M10]>0
  GROUP BY P.BRIDGE_CODE_2) S RIGHT JOIN 
( SELECT PFC, SUM(Unit) Unit FROM _TS_T109_201410 T WHERE Unit>0 GROUP BY PFC) T ON T.PFC = S.PFC 
WHERE S.PFC IS NULL;


